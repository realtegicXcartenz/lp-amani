---
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";
import "swiper/css/autoplay";
import RightBtn from "../../public/svg/right_carousel.svg?raw";
import LeftBtn from "../../public/svg/left_carousel.svg?raw";
import Impact1Img from "../../public/png/impact/impact_1.png";
import Impact2Img from "../../public/png/impact/impact_2.png";

import { Image } from "astro:assets";

// Replace these with your actual images
const impactSlides = [
  {
    title: "Memahami Konsep Rent to Own: Solusi Fleksibel untuk Membeli Rumah",
    image: Impact1Img,
    description:
      "Rent to Own adalah skema pembelian rumah dengan cara menyewa terlebih dahulu sebelum memutuskan untuk ingin memiliki hunian tetapi belum memiliki dana yang cukup untuk mengajukan Kredit Pemilikan Rumah (KPR).",
  },
  {
    title:
      "Soft Launching Amani Home di Millenium Centennial Center: Solusi untuk Unbankable dan Investor Properti",
    image: Impact2Img,
    description:
      "Rent to Own adalah skema pembelian rumah dengan cara menyewa terlebih dahulu sebelum memutuskan untuk ingin memiliki hunian tetapi belum memiliki dana yang cukup untuk mengajukan Kredit Pemilikan Rumah (KPR).",
  },
  {
    title: "Memahami Konsep Rent to Own: Solusi Fleksibel untuk Membeli Rumah",
    image: Impact1Img,
    description:
      "Rent to Own adalah skema pembelian rumah dengan cara menyewa terlebih dahulu sebelum memutuskan untuk ingin memiliki hunian tetapi belum memiliki dana yang cukup untuk mengajukan Kredit Pemilikan Rumah (KPR).",
  },
  {
    title:
      "Soft Launching Amani Home di Millenium Centennial Center: Solusi untuk Unbankable dan Investor Properti",
    image: Impact2Img,
    description:
      "Rent to Own adalah skema pembelian rumah dengan cara menyewa terlebih dahulu sebelum memutuskan untuk ingin memiliki hunian tetapi belum memiliki dana yang cukup untuk mengajukan Kredit Pemilikan Rumah (KPR).",
  },
];
---

<section
  class="p-[4rem] md:py-[8.125rem] md:pl-[7.5625rem] bg-custom-gradient text-white"
>
  <div class="container flex flex-col md:flex-row gap-4 md:gap-16">
    <div class="flex flex-col items-center md:items-start mb-8 md:mb-0">
      <h2
        class="text-5xl leading-[4.1875rem] mb-6 font-semibold text-center md:text-left"
      >
        Ikuti Perjalanan Amani
      </h2>

      <!-- Custom Buttons -->
      <div class="flex flex-row gap-2">
        <div class="custom-prev-button p-2 text-white">
          <Fragment set:html={LeftBtn} />
        </div>
        <div class="custom-next-button p-2 text-white">
          <Fragment set:html={RightBtn} />
        </div>
      </div>
    </div>

    <div class="container w-full overflow-hidden">
      <swiper-container
        class="w-full swiper-1"
        init="false"
        controller-control=".swiper-1"
        navigation-next-el=".custom-next-button"
        navigation-prev-el=".custom-prev-button"
      >
        {
          impactSlides.map((slide, index) => (
            <swiper-slide key={index}>
              <div class="relative rounded-lg w-full bg-transparent overflow-hidden flex flex-col items-center justify-center">
                <Image
                  src={slide.image}
                  alt="Home Buyer"
                  class="w-full h-30 md:h-48 object-cover rounded-lg"
                />
                <div class="py-4">
                  <h3 class="text-lg md:text-xl font-semibold mb-2 text-center md:text-left">
                    {slide.title}
                  </h3>
                  <p class="text-sm md:text-lg text-center md:text-left line-clamp-3">
                    {slide.description}
                  </p>
                </div>
              </div>
            </swiper-slide>
          ))
        }
      </swiper-container>
    </div>
  </div>

  <script type="module">
    document.addEventListener("DOMContentLoaded", () => {
      const swiperEl = document.querySelector(".swiper-1");

      const swiperParams = {
        autoplay: {
          delay: 800,
          disableOnInteraction: false,
        },
        navigation: {
          nextEl: ".custom-next-button",
          prevEl: ".custom-prev-button",
        },
        loop: true,
        speed: 800,
        centeredSlides: true,
        spaceBetween: 30,
        breakpoints: {
          320: {
            slidesPerView: 1,
            centeredSlides: true,
          },
          640: {
            slidesPerView: 1.5,
            centeredSlides: false,
          },
          1024: {
            slidesPerView: 2,
            centeredSlides: false,
          },
          1280: {
            slidesPerView: 2.5,
          },
        },
      };

      // Assign the parameters to the Swiper element
      Object.assign(swiperEl, swiperParams);

      // Initialize Swiper
      swiperEl.initialize();
    });
  </script>
</section>
